name: Update Release JSON

on:
  release:
    types: [published, edited, deleted]

jobs:
  update-json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest release info
        id: release_info
        run: |
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest)
          VERSION=$(echo "$LATEST_RELEASE" | jq -r '.tag_name')
          VERSION_CODE=$(echo "$LATEST_RELEASE" | jq -r '.id')
          ZIP_URL=$(echo "$LATEST_RELEASE" | jq -r '.assets[0].browser_download_url // ""')
          CHANGELOG=$(echo "$LATEST_RELEASE" | jq -r '.body // ""')

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV
          echo "ZIP_URL=$ZIP_URL" >> $GITHUB_ENV
          echo "CHANGELOG=$CHANGELOG" >> $GITHUB_ENV

      - name: Update update.json
        run: |
          cat <<EOF > update.json
          {
            "version": "${VERSION}",
            "versionCode": ${VERSION_CODE},
            "zipUrl": "${ZIP_URL}",
            "changelog": "${CHANGELOG}"
          }
          EOF

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git add update.json
          git commit -m "Update update.json for release ${{ env.VERSION }}" || echo "No changes to commit"
          git push origin HEAD || echo "No changes to push"
